<!DOCTYPE html>
<html>
<head>
	<title>File and Text Input</title>
	<style>
		body {
			font-family: Arial, sans-serif;
			background-color: #111827;
			height: 100%;
			margin: 0;
		}

        .center {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 5vh;
        }

       .white {
            color: #fff;
        }

        .flag {
            margin: 10px;
            padding: 0;
            border-radius: 5px;
            color: #fff;
            margin-top: 0;
            margin-bottom: 10px;
            display: inline-block;
            position: relative;
        }

        .flag-color {
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 10px;
            border-radius: 5px 0 0 5px; 
            z-index: 1;
        }

        .container {
            padding-left: 10px;
            background-color: #1f2937;
            border-radius: 5px;
            padding: 20px;
        }

        .standaloneContainer {
            margin: 10px;
            padding: 0;
            border-radius: 5px;
            color: #fff;
            margin-top: 0;
            margin-bottom: 10px;
            display: block;
            position: relative;
        }

        .critical .flag-color {
            background-color: red;
        }

        .warning .flag-color {
            background-color: rgb(212, 212, 7);
        }

        .safe .flag-color {
            background-color: green;
        }
    </style>
    <script>
        window.onload = function() {
            let localsCompleted = <%= locals.completed %>;
            let intervalId = setInterval(function() {
                console.log("Checking")
                if (localsCompleted) {
                    clearInterval(intervalId);
                } else {
                    location.reload();
                }
            }, 10000); // check every 10 seconds
        }
    </script>
</head>
<body>
    <% if (!(locals.completed)) { %>
        <div class="center">
        <img src=<%= locals.gifName || "Loading" %> alt="loading"> <br/~>
        </div>
    <% } else { %>
        <div class="center white">
            <h2>Report for ID: <%= locals.appID %> </h2>
        </div>

        <% if (jsonReport.returnvalue.regex.flagsTriggered == "") { %>
            <div class="center">
                </br>
                <div class="flag safe">
                    <div class="flag-color"></div>
                        <div class="container">
                            The mod was scanned and no suspicious code was detected automatically. However, this doesn't mean that the mod is 100% safe.
                        </div>
                    </div>
                </div>
            </div> 
            <% } %> 
        <div style="margin: 10px;" class="white">
            <h3>Static analysis: <br/></h3>
        </div>

        <% jsonReport.returnvalue.regex.flagsTriggered.forEach(function(flag) { %>
            <% if (flag.level >= 1) { %> <!--Repeating code >:( there is probbly a better way to do this-->
                <% if (flag.level == 5) { %>
                    <div class="flag critical">
                        <div class="flag-color"></div>
                        <div class="container">
                         Known malicious software identified as: <%= flag.description %>
                          <br/>
                        </div>
                    </div>
                <% } else { %>  
                    <div class="flag <% if (flag.level >= 3) { %>critical<% } else { %>warning<% } %>">
                        <div class="flag-color"></div>
                        <div class="container">
                        <%= flag.description %>
                        <br/>
                        </div>
                    </div>
                <% } %> 
            <% } %>
        <% }); %>

        <div style="margin: 10px;" class="white">
            <h3>Malicious connections: <br/></h3>
        </div>

        <% jsonReport.returnvalue.networkAnalysis.generalResults.maliciousConnections.forEach(function(flag) { %>  
            <div class="flag critical">
                <div class="flag-color"></div>
                <div class="container">
                    <%= flag %>
                    <br/>
                </div>
            </div>
        <% }); %>

        <div style="margin: 10px;" class="white">
            <h3>Unknown connections: <br/></h3>
        </div>

        <% jsonReport.returnvalue.networkAnalysis.generalResults.unknownConnections.forEach(function(flag) { %>  
            <div class="flag warning">
                <div class="flag-color"></div>
                <div class="container">
                    <%= flag %>
                    <br/>
                </div>
            </div>
        <% }); %>      

        <div style="margin: 10px;" class="white">
            <h3>File info: <br/></h3>
        </div>

        <div class="standaloneContainer">
            File name: <%= jsonReport.returnvalue.regex.fileProperties.name.originalName %> 
        </div>
        
        <div class="standaloneContainer">
            SHA 256: <%= jsonReport.returnvalue.regex.fileProperties.hash.SHA_256_hash %> </br>
            MD5: <%= jsonReport.returnvalue.regex.fileProperties.hash.MD5_hash %> </br>
            SHA 512: <%= jsonReport.returnvalue.regex.fileProperties.hash.SHA_512_hash %> </br>
        </div>

        <div class="standaloneContainer">
          Download: <a href=<%= jsonReport.returnvalue.regex.fileProperties.downloadLink %>><%= jsonReport.returnvalue.regex.fileProperties.downloadLink %></a> 
        </div>

    <% } %>
</body>
</html>